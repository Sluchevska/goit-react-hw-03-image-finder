{"version":3,"sources":["components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["SearchBar","onSearch","className","onSubmit","e","preventDefault","target","elements","pictureName","value","toLowerCase","type","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","selectedImg","webformatURL","tags","src","alt","onClick","ImageGallery","pictures","map","id","largeImageUrl","App","color","height","width","Component","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackDrop","currentTarget","window","addEventListener","this","removeEventListener","createPortal","state","reqStatus","page","fetchPics","a","axios","get","response","data","hits","handleFormSubmit","setState","loadMoreBtnClick","prevState","handleSelectedImage","closeModal","prevProps","nextSearch","nextPage","console","log","scrollTo","top","documentElement","scrollHeight","behavior","showButton","length","onCLick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.650d322b.chunk.js","sourcesContent":["\r\nconst SearchBar = ({ onSearch }) => {\r\n   \r\n   const handleSearch = e => {\r\n     e.preventDefault()\r\n    onSearch(e.target.elements.pictureName.value.toLowerCase())\r\n   \r\n    }\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSearch}>\r\n     <button type=\"submit\" className=\"SearchForm-button\">\r\n       <span className=\"SearchForm-button-label\">Search</span>\r\n     </button>\r\n\r\n     <input className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          name='pictureName'\r\n        autoComplete=\"off\"\r\n      autoFocus\r\n      placeholder=\"Search images and photos\"\r\n    />\r\n  </form>\r\n</header>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n\r\n\r\n // if (this.state.pictures.trim() === '') {\r\n    //   return\r\n    // }\r\n    // this.props.submit(this.state.pictures)\r\n    // this.setState({ pictures:''})\r\n\r\n\r\n// export default class SearchBar extends Component{\r\n//   state = {\r\n//     pictures:''\r\n//   }\r\n\r\n//   handleSearcheChange = e => {\r\n//   this.setState({pictures: e.currentTarget.value.toLowerCase()})\r\n//   }\r\n  \r\n  \r\n//  \r\n\r\n//   render() {\r\n//     return (\r\n//         <header className=\"Searchbar\">\r\n//   <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n//     <button type=\"submit\" className=\"SearchForm-button\">\r\n//       <span className=\"SearchForm-button-label\">Search</span>\r\n//     </button>\r\n\r\n//     <input\r\n//       className=\"SearchForm-input\"\r\n//             type=\"text\"\r\n           \r\n//             value={this.state.pictures}\r\n//             onChange={this.handleSearcheChange}\r\n//       autoComplete=\"off\"\r\n//       autoFocus\r\n//       placeholder=\"Search images and photos\"\r\n//     />\r\n//   </form>\r\n// </header>\r\n//     )\r\n//   }\r\n\r\n// }","\r\n\r\nexport default function ImageGalleryItem({selectedImg, webformatURL, tags}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n  <img src={webformatURL}  alt={tags} onClick={selectedImg} className=\"ImageGalleryItem-image\" />\r\n</li>\r\n  )\r\n}\r\n\r\n","import ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ pictures, selectedImg }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {pictures.map(({ id, webformatURL, tags, largeImageUrl }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          onClick={() => selectedImg(largeImageUrl, tags)}\r\n          alt={tags}\r\n        ></ImageGalleryItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class App extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n<Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    );\r\n  }\r\n}","function Button({onClick}) {\r\n  return (\r\n    <button type=\"button\" onClick={onClick}>Load more</button>\r\n  \r\n  )  \r\n}\r\n\r\nexport default Button","import { createPortal } from \"react-dom\";\r\nimport { Component } from \"react\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackDrop = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedImg, tags } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackDrop}>\r\n        <div className=\"Modal\">\r\n          <img src={selectedImg} alt={tags} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport SearchBar from \"./components/SearchBar/SearchBar\";\r\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport Button from \"./components/Button/Button\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport \"./App.css\";\r\nimport \"./components/image-finder/styles.css\";\r\nimport { Component } from \"react\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    pictureName: \"\",\r\n    pictures: [],\r\n    alt: null,\r\n    selectedImg: null,\r\n    reqStatus: \"idle\",\r\n    page: 1,\r\n  };\r\n  \r\n\r\n  fetchPics = async (pictureName, page) => {\r\n    const keyApi = \"22597300-51a9bfff07e627635843c3062\";\r\n    const response = await axios.get(\r\n      `https://pixabay.com/api/?q=${pictureName}&page=${page}&key=${keyApi}&image_type=photo&orientation=horizontal&per_page=12`\r\n    );\r\n    return response.data.hits;\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const nextSearch = this.state.pictureName;\r\n    const nextPage = this.state.page;\r\n    if (prevState.pictureName !== nextSearch || prevState.page !== nextPage) {\r\n      try {\r\n        this.setState({ reqStatus: \"pending\" });\r\n        const pictures = await this.fetchPics(nextSearch, nextPage);\r\n        this.setState({ pictures, reqStatus: \"resolved\" });\r\n      } catch (error) {\r\n        this.setState({ reqStatus: \"rejected\" });\r\n        console.log(\"Error\", error);\r\n      }\r\n\r\n      this.state.page > 1 &&\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = (pictureName) => {\r\n    this.setState({ pictureName });\r\n  };\r\n\r\n  loadMoreBtnClick = () => {\r\n    this.setState((prevState) => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n   \r\n  };\r\n\r\n  handleSelectedImage = (largeImageUrl, tags) => {\r\n    this.setState({\r\n      selectedImg: largeImageUrl,\r\n      alt: tags,\r\n    });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({\r\n      selectedImg: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { pictures, reqStatus, selectedImg, alt } = this.state;\r\n\r\n    const showButton = pictures.length >= 1;\r\n\r\n    return (\r\n      <div>\r\n        <SearchBar onSearch={this.handleFormSubmit} />\r\n        {reqStatus === \"pending\" && <Loader />}\r\n        <ImageGallery\r\n          pictures={pictures}\r\n          selectedImg={this.handleSelectedImage}\r\n        />\r\n\r\n        {showButton && <Button onCLick={this.loadMoreBtnClick} />}\r\n        {selectedImg && (\r\n          <Modal\r\n            selectedImg={selectedImg}\r\n            tags={alt}\r\n            onClose={this.closeModal}\r\n          />\r\n        )}\r\n\r\n        {/* {showModal &&\r\n          <Modal onClose={this.toggleModal}> </Modal>} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}